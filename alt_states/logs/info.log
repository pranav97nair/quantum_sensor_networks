INFO:0.0 ns:Stack.Host(Node_1_host):num pending: 1
INFO:0.0 ns:Stack.Host(Node_2_host):num pending: 1
INFO:0.0 ns:Stack.Host(Node_3_host):num pending: 1
INFO:0.0 ns:Stack.Host(Node_4_host):num pending: 1
DEBUG:0.0 ns:Stack.Handler(Node_1_handler):received new msg from host: b'\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00'
DEBUG:0.0 ns:Stack.Handler(Node_1_handler):registered app with ID 0
DEBUG:0.0 ns:Stack.Handler(Node_2_handler):received new msg from host: b'\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00'
DEBUG:0.0 ns:Stack.Handler(Node_2_handler):registered app with ID 0
DEBUG:0.0 ns:Stack.Handler(Node_3_handler):received new msg from host: b'\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00'
DEBUG:0.0 ns:Stack.Handler(Node_3_handler):registered app with ID 0
DEBUG:0.0 ns:Stack.Handler(Node_4_handler):received new msg from host: b'\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00'
DEBUG:0.0 ns:Stack.Handler(Node_4_handler):registered app with ID 0
DEBUG:0.0 ns:Stack.Host(Node_1_host):got app id from qnos: 0
DEBUG:0.0 ns:Stack.Node_1_Verifier:Available copies: 8
DEBUG:0.0 ns:Stack.Node_1_Verifier:Stabilizers: ['-XXYY', '-YXXY', '-YYXX', 'XXXX']
DEBUG:0.0 ns:Stack.Node_1_Verifier:Copy groups: 
[[4], [3], [7], [2], [6]]

INFO:0.0 ns:Stack.QnosConnection(GHZVerifier):wait_all = True
INFO:0.0 ns:Stack.Node_1_Verifier:Now working with: Copy 0
INFO:0.0 ns:Stack.Node_1_Verifier:Qubit action: discard
INFO:0.0 ns:Stack.Node_1_Verifier:Copy 0 discarded
INFO:0.0 ns:Stack.QnosConnection(GHZVerifier):Flushing protosubroutine:
ProtoSubroutine
  NetQASM version: (0, 10)
  App ID: 0
 LN | HLN | CMD
   0    () array 10 @0
   1    () array 1 @1
   2    () store 0 @1[0]
   3    () array 20 @2
   4    () store 0 @2[0]
   5    () store 1 @2[1]
   6    () create_epr(1,0) 1 2 0
   7    () wait_all @0[0:10]
   8    () set Q0 0
   9    () qfree Q0
  10    () ret_arr @0
  11    () ret_arr @1
  12    () ret_arr @2

INFO:0.0 ns:Stack.QnosConnection(GHZVerifier):Flushing compiled subroutine:
Subroutine
NetQASM version: (0, 10)
App ID: 0
 LN | HLN | CMD
   0    () set R0 10
   1    () array R0 @0
   2    () set R0 1
   3    () array R0 @1
   4    () set R0 0
   5    () set R1 0
   6    () store R0 @1[R1]
   7    () set R0 20
   8    () array R0 @2
   9    () set R0 0
  10    () set R1 0
  11    () store R0 @2[R1]
  12    () set R0 1
  13    () set R1 1
  14    () store R0 @2[R1]
  15    () set R0 1
  16    () set R1 0
  17    () set R2 1
  18    () set R3 2
  19    () set R4 0
  20    () create_epr R0 R1 R2 R3 R4
  21    () set R0 0
  22    () set R1 10
  23    () wait_all @0[R0:R1]
  24    () set Q0 0
  25    () qfree Q0
  26    () ret_arr @0
  27    () ret_arr @1
  28    () ret_arr @2

INFO:0.0 ns:Stack.QnosConnection(GHZVerifier):Commiting compiled subroutine:
Subroutine
NetQASM version: (0, 10)
App ID: 0
 LN | HLN | CMD
   0    () set R0 10
   1    () array R0 @0
   2    () set R0 1
   3    () array R0 @1
   4    () set R0 0
   5    () set R1 0
   6    () store R0 @1[R1]
   7    () set R0 20
   8    () array R0 @2
   9    () set R0 0
  10    () set R1 0
  11    () store R0 @2[R1]
  12    () set R0 1
  13    () set R1 1
  14    () store R0 @2[R1]
  15    () set R0 1
  16    () set R1 0
  17    () set R2 1
  18    () set R3 2
  19    () set R4 0
  20    () create_epr R0 R1 R2 R3 R4
  21    () set R0 0
  22    () set R1 10
  23    () wait_all @0[R0:R1]
  24    () set Q0 0
  25    () qfree Q0
  26    () ret_arr @0
  27    () ret_arr @1
  28    () ret_arr @2

DEBUG:0.0 ns:Stack.QnosConnection(GHZVerifier):Committing message <netqasm.backend.messages.SubroutineMessage object at 0x7f03eb399df0>
DEBUG:0.0 ns:Stack.Host(Node_2_host):got app id from qnos: 0
INFO:0.0 ns:Stack.QnosConnection(GHZMember):wait_all = True
DEBUG:0.0 ns:Stack.Host(Node_3_host):got app id from qnos: 0
INFO:0.0 ns:Stack.QnosConnection(GHZMember):wait_all = True
DEBUG:0.0 ns:Stack.Host(Node_4_host):got app id from qnos: 0
INFO:0.0 ns:Stack.QnosConnection(GHZMember):wait_all = True
DEBUG:0.0 ns:Stack.Handler(Node_1_handler):received new msg from host: b'\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00'
DEBUG:0.0 ns:Stack.Handler(Node_1_handler):Opening EPR socket (0, 1)
DEBUG:0.0 ns:Stack.Handler(Node_1_handler):received new msg from host: b'\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00'
DEBUG:0.0 ns:Stack.Handler(Node_1_handler):Opening EPR socket (1, 2)
DEBUG:0.0 ns:Stack.Handler(Node_1_handler):received new msg from host: b'\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00'
DEBUG:0.0 ns:Stack.Handler(Node_1_handler):Opening EPR socket (2, 3)
DEBUG:0.0 ns:Stack.Handler(Node_1_handler):received new msg from host: b'\x02\x00\n\x00\x00\x04\x00\n\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x04\x00\x01\x00\x00\x00\x00\x03\x00\x01\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x04\x04\x00\x00\x00\x00\x00\x05\x00\x01\x00\x00\x00\x04\x04\x00\x14\x00\x00\x00\x00\x03\x00\x02\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x04\x04\x00\x00\x00\x00\x00\x05\x00\x02\x00\x00\x00\x04\x04\x00\x01\x00\x00\x00\x00\x04\x04\x01\x00\x00\x00\x00\x05\x00\x02\x00\x00\x00\x04\x04\x00\x01\x00\x00\x00\x00\x04\x04\x00\x00\x00\x00\x00\x04\x08\x01\x00\x00\x00\x00\x04\x0c\x02\x00\x00\x00\x00\x04\x10\x00\x00\x00\x00\x00!\x00\x04\x08\x0c\x10\x00\x04\x00\x00\x00\x00\x00\x00\x04\x04\n\x00\x00\x00\x00#\x00\x00\x00\x00\x00\x04\x04\x02\x00\x00\x00\x00\x00&\x02\x00\x00\x00\x00\x00(\x00\x00\x00\x00\x00\x00(\x01\x00\x00\x00\x00\x00(\x02\x00\x00\x00\x00\x00'
DEBUG:0.0 ns:Stack.Handler(Node_2_handler):received new msg from host: b'\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00'
DEBUG:0.0 ns:Stack.Handler(Node_2_handler):Opening EPR socket (0, 0)
DEBUG:0.0 ns:Stack.Handler(Node_2_handler):received new msg from host: b'\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00'
DEBUG:0.0 ns:Stack.Handler(Node_2_handler):Opening EPR socket (1, 2)
DEBUG:0.0 ns:Stack.Handler(Node_2_handler):received new msg from host: b'\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00'
DEBUG:0.0 ns:Stack.Handler(Node_2_handler):Opening EPR socket (2, 3)
DEBUG:0.0 ns:Stack.Handler(Node_3_handler):received new msg from host: b'\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00'
DEBUG:0.0 ns:Stack.Handler(Node_3_handler):Opening EPR socket (0, 0)
DEBUG:0.0 ns:Stack.Handler(Node_3_handler):received new msg from host: b'\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00'
DEBUG:0.0 ns:Stack.Handler(Node_3_handler):Opening EPR socket (1, 1)
DEBUG:0.0 ns:Stack.Handler(Node_3_handler):received new msg from host: b'\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00'
DEBUG:0.0 ns:Stack.Handler(Node_3_handler):Opening EPR socket (2, 3)
DEBUG:0.0 ns:Stack.Handler(Node_4_handler):received new msg from host: b'\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00'
DEBUG:0.0 ns:Stack.Handler(Node_4_handler):Opening EPR socket (0, 0)
DEBUG:0.0 ns:Stack.Handler(Node_4_handler):received new msg from host: b'\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00'
DEBUG:0.0 ns:Stack.Handler(Node_4_handler):Opening EPR socket (1, 1)
DEBUG:0.0 ns:Stack.Handler(Node_4_handler):received new msg from host: b'\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00'
DEBUG:0.0 ns:Stack.Handler(Node_4_handler):Opening EPR socket (2, 2)
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):received new subroutine from handler: Subroutine
NetQASM version: (0, 10)
App ID: 0
 LN | HLN | CMD
   0    () set R0 10
   1    () array R0 @0
   2    () set R0 1
   3    () array R0 @1
   4    () set R0 0
   5    () set R1 0
   6    () store R0 @1[R1]
   7    () set R0 20
   8    () array R0 @2
   9    () set R0 0
  10    () set R1 0
  11    () store R0 @2[R1]
  12    () set R0 1
  13    () set R1 1
  14    () store R0 @2[R1]
  15    () set R0 1
  16    () set R1 0
  17    () set R2 1
  18    () set R3 2
  19    () set R4 0
  20    () create_epr R0 R1 R2 R3 R4
  21    () set R0 0
  22    () set R1 10
  23    () wait_all @0[R0:R1]
  24    () set Q0 0
  25    () qfree Q0
  26    () ret_arr @0
  27    () ret_arr @1
  28    () ret_arr @2

DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):0.0 interpreting instruction set R0 10 at line 0
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):Set register R0 to 10
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):0.0 interpreting instruction array R0 @0 at line 1
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):Initializing an array of length 10 at address @0
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):0.0 interpreting instruction set R0 1 at line 2
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):Set register R0 to 1
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):0.0 interpreting instruction array R0 @1 at line 3
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):Initializing an array of length 1 at address @1
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):0.0 interpreting instruction set R0 0 at line 4
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):Set register R0 to 0
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):0.0 interpreting instruction set R1 0 at line 5
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):Set register R1 to 0
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):0.0 interpreting instruction store R0 @1[R1] at line 6
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):Storing value 0 from register R0 to array entry @1[R1]
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):0.0 interpreting instruction set R0 20 at line 7
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):Set register R0 to 20
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):0.0 interpreting instruction array R0 @2 at line 8
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):Initializing an array of length 20 at address @2
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):0.0 interpreting instruction set R0 0 at line 9
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):Set register R0 to 0
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):0.0 interpreting instruction set R1 0 at line 10
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):Set register R1 to 0
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):0.0 interpreting instruction store R0 @2[R1] at line 11
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):Storing value 0 from register R0 to array entry @2[R1]
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):0.0 interpreting instruction set R0 1 at line 12
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):Set register R0 to 1
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):0.0 interpreting instruction set R1 1 at line 13
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):Set register R1 to 1
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):0.0 interpreting instruction store R0 @2[R1] at line 14
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):Storing value 1 from register R0 to array entry @2[R1]
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):0.0 interpreting instruction set R0 1 at line 15
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):Set register R0 to 1
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):0.0 interpreting instruction set R1 0 at line 16
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):Set register R1 to 0
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):0.0 interpreting instruction set R2 1 at line 17
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):Set register R2 to 1
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):0.0 interpreting instruction set R3 2 at line 18
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):Set register R3 to 2
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):0.0 interpreting instruction set R4 0 at line 19
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):Set register R4 to 0
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):0.0 interpreting instruction create_epr R0 R1 R2 R3 R4 at line 20
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):Creating EPR pair with remote node id 1 and EPR socket ID 0, using qubit addresses stored in array with address 1, using arguments stored in array with address 2, placing the entanglement information in array at address 0
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):0.0 interpreting instruction set R0 0 at line 21
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):Set register R0 to 0
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):0.0 interpreting instruction set R1 10 at line 22
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):Set register R1 to 10
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):0.0 interpreting instruction wait_all @0[R0:R1] at line 23
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):Waiting for all entries in array slice @0[R0:R1] to become defined
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):checking if @0[0:10] has values for app ID 0
DEBUG:0.0 ns:Stack.GenericProcessor(Node_1_processor):waiting for netstack to write to @0[0:10] for app ID 0
DEBUG:0.0 ns:Stack.Netstack(Node_1_netstack):received new msg from processor: NetstackCreateRequest(app_id=0, remote_node_id=1, epr_socket_id=0, qubit_array_addr=1, arg_array_addr=2, result_array_addr=0)
